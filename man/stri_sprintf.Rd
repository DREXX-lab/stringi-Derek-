% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sprintf.R
\name{stri_sprintf}
\alias{stri_sprintf}
\alias{stri_string_format}
\title{Format Strings}
\usage{
stri_sprintf(
  format,
  ...,
  na_string = NA_character_,
  inf_string = "Inf",
  nan_string = "NaN",
  use_length = FALSE
)

stri_string_format(
  format,
  ...,
  na_string = NA_character_,
  inf_string = "Inf",
  nan_string = "NaN",
  use_length = FALSE
)
}
\arguments{
\item{format}{character vector of format strings}

\item{...}{vectors (coercible to integer, real, or character)}

\item{na_string}{single string to represent the not-a-number}

\item{inf_string}{single string to represent the (unsigned) infinity}

\item{use_length}{single logical value; should the number of code
points be used when applying modifiers such as \code{\%20s}
instead of the total code point width (see \code{\link{stri_width}})?}

\item{file}{see \code{\link[base]{cat}}}

\item{sep}{see \code{\link[base]{cat}}}

\item{append}{see \code{\link[base]{cat}}}
}
\value{
\code{stri_printf} is used for its side effect, which is printing
text on the standard output or other connection/file. Hence, it returns
\code{invisible(NULL)}.

The other functions return a character vector.
}
\description{
A Unicode-aware replacement for the built-in \code{\link[base]{sprintf}}
function. Moreover, \code{stri_printf} prints formatted strings.
}
\details{
Vectorized over \code{format} and all vectors passed via \code{...}.

\code{stri_string_format} is a synonym for \code{stri_sprintf}.

Note that \code{stri_printf} treats missing values in \code{...}
as \code{"NA"} strings by default.

Note that Unicode code points may have various widths when
printed on the console and that, by default, the function takes that
into account. By changing the state of the \code{use_length}
argument, this function act as if each code point was of width 1.

For \code{\%d} and \code{\%f} formats, factors are treated as integer
vectors (underlying codes) and so are date and time objects, etc.

This function is not locale sensitive. For instance, numbers are
always formatted in the "POSIX" style, e.g., \code{-123456.789}.
Such a feature might be added at a later date, though.

All arguments passed via \code{...} are evaluated. If some of them
are unused, a warning is generated. Too few arguments result in an error.
}
\examples{
#...
#stri_printf("\%4s=\%.3f", c("e", "e\u00b2", "\u03c0", "\u03c0\u00b2"),
#    c(exp(1), exp(2), pi, pi^2))

# vectorization wrt all arguments:
#p <- runif(10)
#stri_sprintf(ifelse(p > 0.5, "P(Y=1)=\%1$.2f", "P(Y=0)=\%2$.2f"), p, 1-p)

# using a "preformatted" logical vector:
#x <- c(TRUE, FALSE, FALSE, NA, TRUE, FALSE)
#stri_sprintf("\%s) \%s", letters[seq_along(x)], c("\u2718", "\u2713")[x+1])


}
\author{
\href{https://www.gagolewski.com/}{Marek Gagolewski} and other contributors
}
\seealso{
The official online manual of \pkg{stringi} at \url{https://stringi.gagolewski.com/}
}
